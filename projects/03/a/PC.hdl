// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with increment, load, and reset modes.
 * if      (inc(t))   out(t+1) = out(t) + 1
 * else if (load(t))  out(t+1) = in(t)
 * else if (reset(t)) out(t+1) = 0
 * else               out(t+1) = out(t)
 *
 * To select a mode, assert the relevant control bit,
 * and de-assert the other two bits. 
 */
CHIP PC {
    IN in[16],inc, load, reset;
    OUT out[16];
    
    PARTS:
    //// Replace this comment with your code.

    // t1 = previousT + 1
    Inc16(in=previousT,out=t1);

    // t2 = t1 if inc else previousT  (if inc(t) state)
    Mux16(a=previousT,b=t1,sel=inc,out=t2);

    // t3 = in if load else t2 (if load(t) state)
    Mux16(a=t2,b=in,sel=load,out=t3);

    // t4 = 0 if reset else t3 (if reset(t) state)
    Mux16(a=t3,b=false,sel=reset,out=t4);

    // store the bits
    Register(in=t4,load=true,out=previousT,out=out);
}
