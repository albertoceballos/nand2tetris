// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/12/Memory.jack

/**
 * This library provides two services: direct access to the computer's main
 * memory (RAM), and allocation and recycling of memory blocks. The Hack RAM
 * consists of 32,768 words, each holding a 16-bit binary number.
 */ 
class Memory {
    static Array free_blocks;
    static Array ram;
    /** Initializes the class. */
    function void init() {
        // memory
        let ram = 0;
        // heap base = 2048
        let free_blocks = 2048;
        // size of free blocks
        // length = 0
        let free_blocks[0] = 14335;
        // next = 1
        let free_blocks[1] = null;
        return;
    }

    /** Returns the RAM value at the given address. */
    function int peek(int address) {
        return ram[address];
    }

    /** Sets the RAM value at the given address to the given value. */
    function void poke(int address, int value) {
        let ram[address] = value;
        return;
    }

    /** Finds an available RAM block of the given size and returns
     *  a reference to its base address. */
    function int alloc(int size) {
        var Array curr, prev, next;
        let curr = free_blocks;
        let prev = 0;
        while(curr[0] < size){
            let prev = curr;
            let curr = curr[1];
            if(curr = null){
                return -1;
            }
        }
        
        let next = curr + 2 + size;
        let next[0] = curr[0] - size - 2;
        let next[1] = curr[1];
        let curr[0] = size;
        let curr[1] = null;

        if(prev = 0){
            let free_blocks = next;
        }else{
            let prev[1] = next;
        }
        return curr + 2;
    }

    /** De-allocates the given object (cast as an array) by making
     *  it available for future allocations. */
    function void deAlloc(Array o) {
        var Array block;
        let block = o - 2;
        let block[1] = free_blocks;
        let free_blocks = block;
        return;
    }    
}
